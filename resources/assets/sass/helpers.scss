// Any global functions or mixins.
@mixin box-shadow() {
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}

@mixin ripple-click() {
    @include ripple;

    &:focus:not(:active)::after {
        animation: ripple 1s ease-out;
    }

}

@mixin ripple-hover() {
    @include ripple;

    &:hover:after {
        animation: ripple 1s ease-out;
    }
}

@mixin ripple() {
    position: relative;

    &:after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0.25rem;
        height: 0.25rem;
        background: rgba(255, 255, 255, .3);
        opacity: 0;
        border-radius: 100%;
        transform: scale(1) translate(-50%);
        transform-origin: 50% 50%;
    }
}

@mixin visually-hidden() {
    position: absolute; 
    overflow: hidden; 
    clip: rect(0 0 0 0); 
    height: 1px; width: 1px; 
    margin: -1px; padding: 0; border: 0; 
}

@mixin button-reset() {
    cursor: pointer;
    outline: none;
    border: none;
    background: transparent;
    border-radius: 0;
}

@mixin transition($time: 250ms, $ease: ease-in-out, $type: all) {
    transition: $time $ease $type;
}

@mixin border-radius($top-left: 0.35rem, $top-right: 0.35rem, $bottom-right: 0.35rem, $bottom-left: 0.35rem) {
    border-radius: $top-left $top-right $bottom-right $bottom-left;
}

@mixin clear-box-model() {
    margin: 0;
    padding: 0;
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    position: $pos;
    display: $display;
    content: $content;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
    $padding: unquote(($y / $x) * 100 + '%');

    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);

            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin sr-only($focusable: false) {
	border: 0;
	width: 1px;
    padding: 0;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    position: absolute;
    clip: rect(0 0 0 0);

	@if $focusable {
		@include sr-only-focusable;
	}
}

@mixin sr-only-focusable {
	&:active, &:focus {
		margin: 0;
        clip: auto;
		width: auto;
        height: auto;
        position: static;
        overflow: visible;
	}
}

@mixin fluid-property($property, $min, $max, $start: 320, $end: 1920, $clip: true, $clipAtStart: true, $clipAtEnd: true) {
    $multiplier: ($max - $min) / ($end - $start) * 100;
    $adder: ($min * $end - $max * $start) / ($end - $start);
    $formula: calc(#{$multiplier + 0vw} + #{$adder + 0px});

    #{$property}: $formula;

    @if $clip and $clipAtStart {
        @media (max-width: #{$start + 0px}) {
            #{$property}: $min + px;
        }
    }
    @if $clip and $clipAtEnd {
        @media (min-width: #{$end + 0px}) {
            #{$property}: $max + px;
        }
    }
}